<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- scan the package and the sub package -->

    <!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service -->
    <context:component-scan base-package="com.aojiaoo.modules.**.controller" use-default-filters='false'>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--扫描aop相关的包 日志处理 统一异常处理-->
    <!--<context:component-scan base-package="com.aojiaoo.core.handler"/>-->

    <!-- don't handle the static resource -->
    <mvc:default-servlet-handler/>

    <!-- 激活参数绑定-->
    <mvc:annotation-driven/>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--start aop-->
    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>

    <!--配置shiro aop-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
        <property name="order" value="1"/>
    </bean>
    <!--end 配置shiro aop-->

    <!--配置切面的log aop -->
    <bean id="logAop" class="com.aojiaoo.core.aop.LogAop"/>
    <!--<bean id="jsonFilterAop" class="com.aojiaoo.core.aop.LogAop"/>-->
    <aop:config proxy-target-class="true" expose-proxy="true">
        <!--(execution(* com.aojiaoo.modules.*.controller..*.*(..)))-->
        <!-- 配置切点表达式  -->
        <aop:pointcut id="logCut"
                      expression="execution(* com.aojiaoo.modules.*.controller..*.*(..)) and @annotation(org.springframework.web.bind.annotation.RequestMapping)"/>
        <!--<aop:pointcut id="jsonFilter" />-->
        <!-- 配置切面及配置 -->
        <aop:aspect ref="logAop" order="2">
            <!-- 前置通知 -->
            <!--<aop:before method="beforMethod" pointcut-ref="logCut"/>-->
            <aop:around method="around" pointcut-ref="logCut"/>
            <!--&lt;!&ndash; 后置通知 &ndash;&gt;-->
            <!--<aop:after method="afterMethod" pointcut-ref="logCut"/>-->
            <!--&lt;!&ndash; 返回通知 &ndash;&gt;-->
            <!--<aop:after-returning method="afterReturnMethod" pointcut-ref="logCut" returning="result"/>-->
            <!--&lt;!&ndash; 异常通知 &ndash;&gt;-->
            <!--<aop:after-throwing method="afterThrowingMethod" pointcut-ref="logCut" throwing="ex"/>-->
        </aop:aspect>
    </aop:config>
    <!-- end 配置AOP -->

    <!--统一异常处理-->
    <bean class="com.aojiaoo.core.handler.ExceptionHandler"/>

    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="cache" value="true"/>
        <property name="suffix" value=".ftl"/>
        <property name="prefix" value=""/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="requestContextAttribute" value="request"/>
        <property name="allowSessionOverride" value="true"/>
        <property name="order" value="0"/>
    </bean>

    <bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl"/>
        <property name="configLocation" value="classpath:freemarker.properties"/>
    </bean>


</beans>
